class Book:
    def __init__(self, title, author, book_id):
        self.title = title
        self.author = author
        self.book_id = book_id
        self.is_borrowed = False
        self.borrower = None

    def __str__(self):
        status = "Available" if not self.is_borrowed else f"Borrowed by {self.borrower}"
        return f"Book ID: {self.book_id}, Title: '{self.title}', Author: {self.author}, Status: {status}"

    def borrow(self, borrower):
        if not self.is_borrowed:
            self.is_borrowed = True
            self.borrower = borrower
            return True
        else:
            return False

    def return_book(self):
        if self.is_borrowed:
            self.is_borrowed = False
            self.borrower = None
            return True
        else:
            return False


class Library:
    def __init__(self):
        self.books = {}

    def add_book(self, book):
        if book.book_id not in self.books:
            self.books[book.book_id] = book
            print(f"Book '{book.title}' added successfully.")
        else:
            print(f"Book with ID {book.book_id} already exists.")

    def display_books(self):
        if not self.books:
            print("No books in the library.")
        else:
            for book_id in self.books:
                print(self.books[book_id])

    def borrow_book(self, book_id, borrower):
        if book_id in self.books:
            book = self.books[book_id]
            if book.borrow(borrower):
                print(f"Book '{book.title}' borrowed successfully by {borrower}.")
            else:
                print(f"Book '{book.title}' is already borrowed.")
        else:
            print(f"Book with ID {book_id} is not available in the library.")

    def return_book(self, book_id):
        if book_id in self.books:
            book = self.books[book_id]
            if book.return_book():
                print(f"Book '{book.title}' returned successfully.")
            else:
                print(f"Book '{book.title}' was not borrowed.")
        else:
            print(f"Book with ID {book_id} is not available in the library.")


# Example usage:
if __name__ == "__main__":
    library = Library()

    # Adding books
    book1 = Book("Introduction to Python", "John Smith", 101)
    book2 = Book("Data Structures in Python", "Jane Doe", 102)
    library.add_book(book1)
    library.add_book(book2)

    # Displaying books
    print("\nDisplaying all books in the library:")
    library.display_books()

    # Borrowing and returning books
    library.borrow_book(101, "Alice")
    library.borrow_book(102, "Bob")
    library.borrow_book(102, "Carol")  # This should fail since book 102 is already borrowed

    library.return_book(101)
    library.return_book(103)  # This should fail since book 103 doesn't exist
